@page
@{
    Layout = null;
    string title = Environment.GetEnvironmentVariable("TITLE") ?? "Yet another voting app";
}
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <link rel="stylesheet" type="text/css" href="css/default.css" />
    <link href="https://afeld.github.io/emoji-css/emoji.css" rel="stylesheet" />
    <title>Voting App</title>
</head>
<body>
  <div id="container">
    <center>
      <div id="logo">@title</div>
      <div id="space"></div>
      <div id="form">
      <button name="vote" value="{{button1}}" onclick="send('cats')" class="button button1">
        <i class="em em-cat"></i> Cats - <span id='cats'></span>
      </button>
      <div id="space"></div>
      <button name="vote" value="{{button2}}" onclick="send('dogs')" class="button button2">
        <i class="em em-dog"></i> Dogs - <span id='dogs'></span>
      </button>
      <div id="space"></div>
    </center>
  </div>
  <script src="https://unpkg.com/@@aspnet/signalr@@1.0.0-preview2-final/dist/browser/signalr.js"></script>
  <script>
  var maxReconnects = 200
  var reconnects = 0
  var connected = false
  var connection = new signalR.HubConnection('/votinghub')
  connection.on('resultsChanged', resultsChanged)
  connection.onclose(() => startConnection(connection))
  startConnection(connection)

  function startConnection(connection) {
    reconnects += 1
    if (reconnects > maxReconnects) {
      return
    }
    console.log('connecting...')
    connection.start()
      .then(() => {
        console.log('connected')
        resultsChanged({dogs: 0, cats: 0})
        connected = true
      })
      .catch(err => {
        console.error(err)
        connected = false
        setTimeout(() => startConnection(connection), 2000)
      })
  }

  var current = {
    cats: 0,
    dogs: 0
  }
  function resultsChanged(results) {
    // sometimes updates come in out of order, so only update when results are increasing
    var resetting = !results.dogs && !results.cats
    if (resetting || results.dogs > current.dogs) {
      document.getElementById('dogs').textContent = results.dogs
    }
    if (resetting || results.cats > current.cats) {
      document.getElementById('cats').textContent = results.cats
    }
    current.dogs = results.dogs
    current.cats = results.cats
  }

  function send(vote) {
    if (connected) {
      connection.invoke('Vote', vote)
    }
  }
  </script>
</body>
</html>